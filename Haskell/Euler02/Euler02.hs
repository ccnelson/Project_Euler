-- C NELSON 2020
{- Each new term in the Fibonacci sequence is generated by 
adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose 
values do not exceed four million,
 find the sum of the even-valued terms.
(Answer = 4613732) -}

-- Haskell is lazy so generate infinite fibonacci series and refine

infiniteFibs :: [Int]
infiniteFibs = zipWith (+) (0:infiniteFibs) (0:1:infiniteFibs)

main = do
    let fibsLTFourMillion = takeWhile (<4000000) infiniteFibs
    let evenFibsLTFourMillion = filter even fibsLTFourMillion
    let finalAnswer = sum evenFibsLTFourMillion
    putStr "Answer:\t"
    print(finalAnswer)

