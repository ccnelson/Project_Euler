// C NELSON 2020
/* Each new term in the Fibonacci sequence is generated by 
adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose 
values do not exceed four million,
 find the sum of the even-valued terms.
(Answer = 4613732) */

// solution uses LINQ query with bitwise AND to test least significant bit

using System;
using System.Collections.Generic;
using System.Linq;

namespace Euler02linqname
{
    class Euler02_linq
    {
        static void Main(string[] args)
        {
            IEnumerable<int> Fibonacci()
            {
                int current = 0;
                int next = 1;
                int temp;
                while (true)
                {
                    yield return current;   // return current
                    temp = next;            // store next
                    next = current + next;  // prepare next
                    current = temp;         // assign next
                }
            }

            var watch = new System.Diagnostics.Stopwatch();
            watch.Start();

            int finalAnswer = Fibonacci().TakeWhile(x => x < 4000000L)
                .Where(y => (y & 1) != 1)
                .Sum();

            watch.Stop();

            Console.WriteLine("Answer:\t{0}", finalAnswer);
            Console.WriteLine("Took:\t{0} ticks", watch.ElapsedTicks);
            Console.WriteLine("Took:\t{0} ms", watch.ElapsedMilliseconds);
        }
    }
}