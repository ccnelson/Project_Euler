// C NELSON 2020
/* Each new term in the Fibonacci sequence is generated by 
adding the previous two terms. 
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose 
values do not exceed four million,
 find the sum of the even-valued terms.
(Answer = 4613732) */

// even fibonacci numbers occur following two odd fibonacci numbers. 
// solution uses a counter to add every third number to total.

#include <iostream>
#include <chrono>

using namespace std::chrono; 

int main()
{
    int n1 = 0;
    int n2 = 1;
    int n3 = 0;
    int finalAnswer = 0;
    int counter = 1;
    
    auto tic = high_resolution_clock::now();
    
    while (n3 < 4000000)
    {
        n3 = n1 + n2;
        counter += 1;
        if (counter == 3)
        {
            finalAnswer += n3;
            counter = 0;
        }
        n1 = n2;
        n2 = n3;
    }
    
    auto toc = high_resolution_clock::now();
    auto timeElapsed = duration_cast<nanoseconds>(toc - tic).count();

    std::cout << "Answer:\t" << finalAnswer << "\nTook:\t" << timeElapsed << " nanoseconds";
}